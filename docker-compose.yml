services:
  app:
    build: .
    container_name: blog_app
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: ["/bin/sh", "-c", "PYTHONPATH=. alembic -c src/alembic.ini upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    profiles: ["prod", "dev"]

#   db:
#     image: postgres:16
#     container_name: blog_db
#     env_file:
#       - .env
#     environment:
#       - POSTGRES_DB=${POSTGRES_DB}
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
#     ports:
#       - "5432:5432"
#     volumes:
#       - pg_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 20s
#     profiles: ["prod", "dev"]

# volumes:
#   pg_data:
